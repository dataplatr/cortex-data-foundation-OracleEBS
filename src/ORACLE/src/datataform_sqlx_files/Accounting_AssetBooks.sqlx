---------------------------------------------------------------------
-- Edw.Accounting_AssetBooks.sqlx Loading script using Dataform
---------------------------------------------------------------------
config {
  type: "incremental",
  schema: "Edw",
  tags: ["Finance-OracleDetail"],
  uniqueKey: ["BookTypeCode"],

  assertions:{
    uniqueKey: ["BookTypeCode"],
    nonNull: ["BookTypeCode","BookTypeName","LedgerId","InitialDate","BookClass"],
   
  }
}

select
ParentSystemID as ParentSystemId,
SystemID as SystemId,
BOOK_TYPE_CODE as BookTypeCode,
BOOK_TYPE_NAME as BookTypeName,
SET_OF_BOOKS_ID as LedgerId,
INITIAL_DATE as InitialDate,
LAST_DEPRN_RUN_DATE as LastDepreciationRunDate,
AMORTIZE_FLAG as AmortizeFlag,
FULLY_RESERVED_FLAG as FullyReservedFlag,
DEPRN_CALENDAR as DepreciationCalendar, 
BOOK_CLASS as BookClass,
GL_POSTING_ALLOWED_FLAG as GeneralLedgerPostingAllowedFlag,
CURRENT_FISCAL_YEAR as CurrentFiscalYear,
ALLOW_MASS_CHANGES as AllowMassChanges,
ALLOW_DEPRN_ADJUSTMENTS as AllowDepreciationAdjustments,
ACCOUNTING_FLEX_STRUCTURE as AccountingFlexStructure,
PRORATE_CALENDAR as ProrateCalendar,
DATE_INEFFECTIVE as DateIneffective,
JE_RETIREMENT_CATEGORY as JournalEntryRetirementCategory,
JE_DEPRECIATION_CATEGORY as JournalEntryDepreciationCategory,
JE_RECLASS_CATEGORY as JournalEntryReclassCategory,
GL_JE_SOURCE as JournalEntrySource,
JE_ADDITION_CATEGORY as JournalEntryAdditionCategory,
JE_ADJUSTMENT_CATEGORY as JournalEntryAdjustmentCategory,
DISTRIBUTION_SOURCE_BOOK as DistributionSourceBook,
JE_TRANSFER_CATEGORY as JournalEntryTransferBook,
CREATED_BY as CreatedBy,
CREATION_DATE as CreationDate,
LAST_UPDATE_DATE as LastUpdateDate,
LAST_UPDATED_BY as LastUpdatedBy,
LAST_UPDATE_LOGIN as LastUpdateLogin,
DEPRN_STATUS as DepreciationStatus,
FISCAL_YEAR_NAME as FiscalYearName,
INITIAL_PERIOD_COUNTER as InitialPeriodCounter,
LAST_MASS_COPY_PERIOD_COUNTER as LastMassCopyPeriodCounter,
LAST_PERIOD_COUNTER as LastPeriodCounter,
LAST_PURGE_PERIOD_COUNTER as LastPurgePeriodCounter,
ORG_ID as OrganizationId,
LoadBy,
LoadDate,
LoadProcess,
CreateBy,
CreateDate,
CreateProcess,
UpdateBy,
UpdateDate,
UpdateProcess,
InactiveInd,
InactiveDate,
InactiveReason
from ${ref("OracleEbs-FA_BOOK_CONTROLS")} bookc
where 
DATE(bookc.LoadDate) > ifnull((SELECT DATE(MAX(LoadDate)) FROM ${self()}),'1900-01-01')