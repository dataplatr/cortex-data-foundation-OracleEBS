---------------------------------------------------------------------
-- Accounting_GLBalances.sqlx Loading script using Dataform
---------------------------------------------------------------------
config {
  type: "incremental",
  schema: "${edw_dataset}",
  tags: ["Finance-OracleDetail"],
  uniqueKey: ["GLBalanceKey"],

  assertions:{
    uniqueKey: ["GLBalanceKey"],
    nonNull:["GLBalanceKey"],
   
  }
}

SELECT
  glb.ParentSystemId,
  glb.SystemId,
  concat (glb.LEDGER_ID,"-",glb.CODE_COMBINATION_ID,"-",glb.CURRENCY_CODE,"-",glb.PERIOD_NAME,"-",glb.TRANSLATED_FLAG,"-",glb.ACTUAL_FLAG) as GLBalanceKey,
  glb.LEDGER_ID AS LedgerId,
  glb.CODE_COMBINATION_ID AS CodeCombinationId,
  glb.PERIOD_NAME AS PeriodName,
  glb.ACTUAL_FLAG AS ActualFlag,
  glb.LAST_UPDATE_DATE AS LastUpdateDate,
  glb.LAST_UPDATED_BY AS LastUpdatedBy,
  glb.TRANSLATED_FLAG AS TranslatedFlag,
  glb.REVALUATION_STATUS AS RevaluationStatus,
  glb.PERIOD_TYPE AS PeriodType,
  glb.PERIOD_YEAR AS PeriodYear,
  glb.PERIOD_NUM AS PeriodNum,
  glb.CURRENCY_CODE AS TransactionCurrency,
  glb.PERIOD_NET_DR AS TransCurrPeriodNetDr,
  glb.PERIOD_NET_CR AS TransCurrPeriodNetCr,
  glb.PERIOD_NET_DR-glb.PERIOD_NET_CR as TransCurrPeriodNet,
  glb.BEGIN_BALANCE_DR AS TransCurrBeginBalanceDr,
  glb.BEGIN_BALANCE_CR AS TransCurrBeginBalanceCr,
  glb.BEGIN_BALANCE_DR-glb.BEGIN_BALANCE_CR as TransCurrOpeningBalance,
  (glb.BEGIN_BALANCE_DR-glb.BEGIN_BALANCE_CR) + (glb.PERIOD_NET_DR-glb.PERIOD_NET_CR) as TransCurrEndingBalance,
  (glb.QUARTER_TO_DATE_DR+glb.PERIOD_NET_DR) AS TransCurrQuarterToDateDr,
  (glb.QUARTER_TO_DATE_CR+glb.PERIOD_NET_CR) AS TransCurrQuarterToDateCr,
  (glb.QUARTER_TO_DATE_DR+glb.PERIOD_NET_DR) - (glb.QUARTER_TO_DATE_CR+glb.PERIOD_NET_CR) AS TransCurrQuarterToDate,
  gl.CURRENCY_CODE as LedgerCurrency,
  glb.PERIOD_NET_DR_BEQ AS LedgerCurrPeriodNetDr,
  glb.PERIOD_NET_CR_BEQ AS LedgerCurrPeriodNetCr,
  glb.PERIOD_NET_DR_BEQ-glb.PERIOD_NET_CR_BEQ as LedgerCurrPeriodNet,
  glb.BEGIN_BALANCE_DR_BEQ AS LedgerCurrBeginBalanceDr,
  glb.BEGIN_BALANCE_CR_BEQ AS LedgerCurrBeginBalanceCr,
  glb.BEGIN_BALANCE_DR_BEQ-glb.BEGIN_BALANCE_CR_BEQ as LedgerCurrOpeningBalance,
  (glb.BEGIN_BALANCE_DR_BEQ-glb.BEGIN_BALANCE_CR_BEQ) + (glb.PERIOD_NET_DR_BEQ-glb.PERIOD_NET_CR_BEQ) as LedgerCurrEndingBalance,
  (glb.QUARTER_TO_DATE_DR_BEQ+glb.PERIOD_NET_DR_BEQ) AS LedgerCurrQuarterToDateDr,
  (glb.QUARTER_TO_DATE_CR_BEQ+glb.PERIOD_NET_CR_BEQ) AS LedgerCurrQuarterToDateCr,
  (glb.QUARTER_TO_DATE_DR_BEQ+glb.PERIOD_NET_DR_BEQ) - (glb.QUARTER_TO_DATE_CR_BEQ+glb.PERIOD_NET_CR_BEQ) AS LedgerCurrQuarterToDate,
  glb.BUDGET_VERSION_ID AS BudgetVersionId,
  glb.ENCUMBRANCE_TYPE_ID AS EncumbranceTypeId,
  glb.ENCUMBRANCE_DOC_ID AS EncumbranceDocId,
  glb.ENCUMBRANCE_LINE_NUM AS EncumbranceLineNum,
  glb.LoadBy,
  glb.LoadDate,
  glb.LoadProcess,
  glb.CreateBy,
  glb.CreateDate,
  glb.CreateProcess,
  glb.UpdateBy,
  glb.UpdateDate,
  glb.UpdateProcess,
  glb.InactiveInd,
  glb.InactiveDate,
  glb.InactiveReason
FROM
  $${ref("OracleEbs-GL_BALANCES")} AS glb left outer join $${ref("OracleEbs-GL_LEDGERS")} as gl on glb.LEDGER_ID=gl.LEDGER_ID and gl.InactiveInd=false
where 
DATE(glb.LoadDate) > ifnull((SELECT DATE(MAX(LoadDate)) FROM $${self()}),'1900-01-01')